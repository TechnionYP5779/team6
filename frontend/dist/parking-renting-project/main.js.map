{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/become-host/become-host.component.css","webpack:///./src/app/become-host/become-host.component.html","webpack:///./src/app/become-host/become-host.component.ts","webpack:///./src/app/find-parking/find-parking.component.css","webpack:///./src/app/find-parking/find-parking.component.html","webpack:///./src/app/find-parking/find-parking.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/navbar/navbar.component.css","webpack:///./src/app/navbar/navbar.component.html","webpack:///./src/app/navbar/navbar.component.ts","webpack:///./src/app/not-found/not-found.component.css","webpack:///./src/app/not-found/not-found.component.html","webpack:///./src/app/not-found/not-found.component.ts","webpack:///./src/app/rent-spot-dialog/rent-spot-dialog.component.css","webpack:///./src/app/rent-spot-dialog/rent-spot-dialog.component.html","webpack:///./src/app/rent-spot-dialog/rent-spot-dialog.component.ts","webpack:///./src/app/rent-spot-form/rent-spot-form.component.css","webpack:///./src/app/rent-spot-form/rent-spot-form.component.html","webpack:///./src/app/rent-spot-form/rent-spot-form.component.ts","webpack:///./src/app/rent-spot.ts","webpack:///./src/app/sign-up/sign-up.component.css","webpack:///./src/app/sign-up/sign-up.component.html","webpack:///./src/app/sign-up/sign-up.component.ts","webpack:///./src/app/web.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { FindParkingComponent } from './find-parking/find-parking.component';\r\nimport { BecomeHostComponent } from './become-host/become-host.component';\r\nimport { NotFoundComponent } from './not-found/not-found.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: HomeComponent },\r\n  { path: 'find-parking', component: FindParkingComponent },\r\n  { path: 'become-host', component: BecomeHostComponent },\r\n  { path: '**', component: NotFoundComponent },\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\nexport const routingComponents = [HomeComponent, FindParkingComponent, BecomeHostComponent, NotFoundComponent]","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-navbar></app-navbar>\\r\\n\\r\\n<router-outlet></router-outlet>\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'parking-renting-project';\r\n}\r\n","// external imports:\r\n\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { HttpClientModule, HttpHeaders } from '@angular/common/http';\r\n\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { MatDialogModule, MatButtonModule, MatFormFieldModule, MatInputModule, MatIconModule } from '@angular/material';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\n\r\n\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { AgmCoreModule } from '@agm/core';\r\n\r\n// local imports:\r\n\r\n\r\nimport { AppRoutingModule, routingComponents } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { NavbarComponent } from './navbar/navbar.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { BecomeHostComponent } from './become-host/become-host.component';\r\nimport { NotFoundComponent } from './not-found/not-found.component';\r\nimport { SignUpComponent } from './sign-up/sign-up.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RentSpotFormComponent } from './rent-spot-form/rent-spot-form.component';\r\nimport { WebService } from './web.service';\r\nimport { RentSpotDialogComponent } from './rent-spot-dialog/rent-spot-dialog.component';\r\n\r\n\r\n@NgModule({\r\n\r\n  declarations: [\r\n    AppComponent,\r\n    NavbarComponent,\r\n    routingComponents,\r\n    HomeComponent,\r\n    BecomeHostComponent,\r\n    NotFoundComponent,\r\n    SignUpComponent,\r\n    LoginComponent,\r\n    RentSpotFormComponent,\r\n    RentSpotDialogComponent\r\n  ],\r\n\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n\r\n    HttpClientModule,\r\n\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n\r\n    MatDialogModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatIconModule,\r\n    MatSelectModule,\r\n    MatRadioModule,\r\n    MatTableModule,\r\n    MatSortModule,\r\n    MatProgressSpinnerModule,\r\n\r\n    NgbModule,\r\n\r\n    AppRoutingModule,\r\n\r\n    AgmCoreModule.forRoot({\r\n      apiKey: 'AIzaSyDQSACUeONioHKwbzWqEmL35YqRAbgnjeQ',\r\n      libraries: ['geometry']\r\n    })\r\n  ],\r\n\r\n  exports: [\r\n    MatButtonModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n\r\n    FormsModule\r\n  ],\r\n\r\n  providers: [WebService],\r\n\r\n  bootstrap: [AppComponent],\r\n\r\n  entryComponents: [LoginComponent, SignUpComponent, RentSpotDialogComponent]\r\n\r\n})\r\n\r\nexport class AppModule { }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2JlY29tZS1ob3N0L2JlY29tZS1ob3N0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<app-rent-spot-form></app-rent-spot-form>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-become-host',\r\n  templateUrl: './become-host.component.html',\r\n  styleUrls: ['./become-host.component.css']\r\n})\r\nexport class BecomeHostComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"/** split page to 2 columns */\\r\\n\\r\\n.container {\\r\\n    margin-top: 10px;\\r\\n    margin-left: unset; \\r\\n  }\\r\\n\\r\\n.row:after {\\r\\n    content: \\\"\\\";\\r\\n    display: table;\\r\\n    clear: both;\\r\\n  \\r\\n  }\\r\\n\\r\\n.column-split {\\r\\n    float: left;\\r\\n    width: 50%;\\r\\n    padding-left: 15px;\\r\\n    padding-right: 15px;\\r\\n  }\\r\\n\\r\\n/** map */\\r\\n\\r\\nagm-map {\\r\\n    height: 600px;\\r\\n    width: 600px;\\r\\n  }\\r\\n\\r\\n.example-radio-group {\\r\\n    display: inline-flex;\\r\\n    flex-direction: column;\\r\\n  }\\r\\n\\r\\n.example-radio-button {\\r\\n    margin: 5px;\\r\\n  }\\r\\n\\r\\n.example-selected-value {\\r\\n    margin: 15px 0;\\r\\n  }\\r\\n\\r\\n/** table */\\r\\n\\r\\n.mat-table {\\r\\n    width: 550px;\\r\\n  }\\r\\n\\r\\n.mat-form-field{\\r\\n    width:400px;\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZmluZC1wYXJraW5nL2ZpbmQtcGFya2luZy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLDhCQUE4Qjs7QUFFOUI7SUFDSSxpQkFBaUI7SUFDakIsbUJBQW1CO0dBQ3BCOztBQUVEO0lBQ0UsWUFBWTtJQUNaLGVBQWU7SUFDZixZQUFZOztHQUViOztBQUVEO0lBQ0UsWUFBWTtJQUNaLFdBQVc7SUFDWCxtQkFBbUI7SUFDbkIsb0JBQW9CO0dBQ3JCOztBQUdELFVBQVU7O0FBRVY7SUFDRSxjQUFjO0lBQ2QsYUFBYTtHQUNkOztBQUVEO0lBQ0UscUJBQXFCO0lBQ3JCLHVCQUF1QjtHQUN4Qjs7QUFFRDtJQUNFLFlBQVk7R0FDYjs7QUFFRDtJQUNFLGVBQWU7R0FDaEI7O0FBRUQsWUFBWTs7QUFFWjtJQUNFLGFBQWE7R0FDZDs7QUFFRDtJQUNFLFlBQVk7R0FDYiIsImZpbGUiOiJzcmMvYXBwL2ZpbmQtcGFya2luZy9maW5kLXBhcmtpbmcuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBzcGxpdCBwYWdlIHRvIDIgY29sdW1ucyAqL1xyXG5cclxuLmNvbnRhaW5lciB7XHJcbiAgICBtYXJnaW4tdG9wOiAxMHB4O1xyXG4gICAgbWFyZ2luLWxlZnQ6IHVuc2V0OyBcclxuICB9XHJcbiAgIFxyXG4gIC5yb3c6YWZ0ZXIge1xyXG4gICAgY29udGVudDogXCJcIjtcclxuICAgIGRpc3BsYXk6IHRhYmxlO1xyXG4gICAgY2xlYXI6IGJvdGg7XHJcbiAgXHJcbiAgfVxyXG4gIFxyXG4gIC5jb2x1bW4tc3BsaXQge1xyXG4gICAgZmxvYXQ6IGxlZnQ7XHJcbiAgICB3aWR0aDogNTAlO1xyXG4gICAgcGFkZGluZy1sZWZ0OiAxNXB4O1xyXG4gICAgcGFkZGluZy1yaWdodDogMTVweDtcclxuICB9XHJcbiAgXHJcbiAgXHJcbiAgLyoqIG1hcCAqL1xyXG4gIFxyXG4gIGFnbS1tYXAge1xyXG4gICAgaGVpZ2h0OiA2MDBweDtcclxuICAgIHdpZHRoOiA2MDBweDtcclxuICB9XHJcblxyXG4gIC5leGFtcGxlLXJhZGlvLWdyb3VwIHtcclxuICAgIGRpc3BsYXk6IGlubGluZS1mbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICB9XHJcbiAgXHJcbiAgLmV4YW1wbGUtcmFkaW8tYnV0dG9uIHtcclxuICAgIG1hcmdpbjogNXB4O1xyXG4gIH1cclxuICBcclxuICAuZXhhbXBsZS1zZWxlY3RlZC12YWx1ZSB7XHJcbiAgICBtYXJnaW46IDE1cHggMDtcclxuICB9XHJcbiAgXHJcbiAgLyoqIHRhYmxlICovXHJcbiAgXHJcbiAgLm1hdC10YWJsZSB7XHJcbiAgICB3aWR0aDogNTUwcHg7XHJcbiAgfVxyXG5cclxuICAubWF0LWZvcm0tZmllbGR7XHJcbiAgICB3aWR0aDo0MDBweDtcclxuICB9Il19 */\"","module.exports = \"<div style=\\\"width:40%; margin:5% auto;\\\" *ngIf=\\\"loading\\\">\\r\\n  <mat-progress-spinner mode=\\\"indeterminate\\\" value=\\\"indeterminate\\\" diameter=\\\"200\\\" strokeWidth=\\\"10\\\" style=\\\"width:15%; margin:0 auto;\\\">\\r\\n  </mat-progress-spinner>\\r\\n</div> \\r\\n\\r\\n<div class=\\\"container\\\" *ngIf=\\\"!loading\\\">\\r\\n  <!-- Title -->\\r\\n  <h2>Find parking spot</h2> \\r\\n  <!-- split page to 2 columns: table on the left and map on the right -->\\r\\n  <div class=\\\"row\\\">\\r\\n\\r\\n    <!-- FEFT -------------------------------------------------------------------------------------->\\r\\n    <div class=\\\"column-split\\\" id=\\\"table\\\">\\r\\n\\r\\n      <!-- Form (left) ----------------------------------------------------------------------------->\\r\\n      <div class=\\\"container\\\" [formGroup]=\\\"filterForm\\\">\\r\\n\\r\\n        <div>\\r\\n          <mat-form-field class=\\\"form-field\\\">\\r\\n            <mat-label>Max distance from your location</mat-label>\\r\\n            <input matInput placeholder=\\\"max distance\\\" formControlName=\\\"maxDistance\\\">\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n\\r\\n        <div>\\r\\n          <mat-form-field class=\\\"form-field\\\">\\r\\n            <mat-label>Max price</mat-label>\\r\\n            <input matInput placeholder=\\\"max price\\\" formControlName=\\\"maxPrice\\\">\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n\\r\\n        <div>\\r\\n          <mat-form-field>\\r\\n            <mat-label>Choose how to determine your current location</mat-label>\\r\\n            <mat-select placeholder=\\\"location options\\\" formControlName=\\\"locationOption\\\" required>\\r\\n              <mat-option *ngFor=\\\"let option of locationOptions\\\" [value]=\\\"option\\\">\\r\\n                {{option}}\\r\\n              </mat-option>\\r\\n            </mat-select>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n\\r\\n      <button type=\\\"button\\\" (click)=\\\"filter()\\\" [disabled]=\\\"!filterForm.valid\\\">Submit</button>\\r\\n      <button type=\\\"button\\\" (click)=\\\"reset()\\\">Reset (show all spot)</button>\\r\\n\\r\\n\\r\\n      <!-- Table (left) ---------------------------------------------------------------------------->\\r\\n      <table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\" matSort>\\r\\n\\r\\n        <!-- ID Column -->\\r\\n        <ng-container matColumnDef=\\\"id\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.id}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <!-- Addres Column -->\\r\\n        <ng-container matColumnDef=\\\"address\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef> Address </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.city}} {{element.street}} {{element.building}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n<!--          Distance Column \\r\\n        <ng-container matColumnDef=\\\"distance\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Distance </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.distance == -1 ? '---' : element.distance}} </td>\\r\\n        </ng-container> -->\\r\\n\\r\\n        <!-- Price Column -->\\r\\n        <ng-container matColumnDef=\\\"price\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Price </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.price}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n      </table>\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <!-- RIGHT ------------------------------------------------------------------------------------->\\r\\n    <div class=\\\"column-split\\\" id=\\\"map\\\">\\r\\n\\r\\n      <!-- The map (right) ------------------------------------------------------------------------->\\r\\n      <agm-map [zoom]='17' [latitude]=\\\"currlat\\\" [longitude]=\\\"currlng\\\">\\r\\n\\r\\n        <!-- Marker for current location -->\\r\\n        <agm-marker [latitude]=\\\"currlat\\\" [longitude]=\\\"currlng\\\" [iconUrl]=\\\"'../../assets/img/blue-dot.png'\\\">\\r\\n          <agm-info-window>Your current location</agm-info-window>\\r\\n        </agm-marker>\\r\\n\\r\\n        <!-- Markers for all avaiable spot -->\\r\\n        <agm-marker *ngFor=\\\"let spot of ELEMENT_DATA_FILTER; let i=index\\\" [latitude]=\\\"+spot.latitude\\\" [longitude]=\\\"+spot.longitude\\\"\\r\\n          [label]=\\\"spot.id.toString()\\\">\\r\\n          <agm-info-window>\\r\\n            ID: {{spot.id}}\\r\\n            <br>\\r\\n            price: {{spot.price}}\\r\\n            <br>\\r\\n            distance: {{spot.distance}}\\r\\n            <br>\\r\\n            <button type=\\\"button\\\" (click)=\\\"rentSpot(spot)\\\">Rent Me!</button>\\r\\n\\r\\n          </agm-info-window>\\r\\n        </agm-marker>\\r\\n\\r\\n\\r\\n      </agm-map>\\r\\n\\r\\n    </div>\\r\\n\\r\\n\\r\\n  </div>\\r\\n\\r\\n \\r\\n</div>\"","/// <reference types=\"@types/googlemaps\" />\r\ndeclare let google: any;\r\n\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MapsAPILoader } from '@agm/core';\r\nimport { MatRadioModule, MatRadioButton, MatRadioChange } from '@angular/material/radio';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatSort, MatTableDataSource } from '@angular/material';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport { WebService } from '../web.service';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA, MatDialogConfig } from '@angular/material';\r\nimport { RentSpotDialogComponent } from '../rent-spot-dialog/rent-spot-dialog.component';\r\nimport { elementStyleProp } from '@angular/core/src/render3';\r\n\r\n\r\n@Component({\r\n  selector: 'app-find-parking',\r\n  templateUrl: './find-parking.component.html',\r\n  styleUrls: ['./find-parking.component.css']\r\n})\r\nexport class FindParkingComponent implements OnInit {\r\n\r\n  //--- INIT LOCATION ----------------------------------------------------------------------------------------\r\n\r\n  // let the user to define his current location\r\n  defineCurrLocOptions: string[] = ['GPS location', 'Technion']; // need to add \"choose by address\"\r\n  selectedCurrLocOption: string = 'GPS location';\r\n\r\n  // cuurent location (as defined by user choice)\r\n  currlat: number;\r\n  currlng: number;\r\n\r\n  loading = true\r\n\r\n  // technion location (used if browser doesn't support GPS)\r\n  thecnionlat: number = 32.776520;\r\n  thecnionlng: number = 35.022610;\r\n\r\n  //--- DATABASE ---------------------------------------------------------------------------------------------\r\n\r\n  // fake DB TODO: updete this!!!\r\n\r\n  displayedColumns: string[] = ['id', 'address', 'price'];\r\n  ELEMENT_DATA: SpotElement[] = null;\r\n  ELEMENT_DATA_FILTER: SpotElement[] = null;\r\n  dataSource = null;\r\n\r\n  //--- NGINIT & C'TOR ---------------------------------------------------------------------------------------\r\n\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  async ngOnInit() {\r\n    this.findCurrentLocation();\r\n    var res = await this.webService.getSpots();\r\n    console.log(res)\r\n    this.ELEMENT_DATA = JSON.parse('' + res + '')\r\n    this.ELEMENT_DATA_FILTER = this.ELEMENT_DATA;\r\n    console.log(this.ELEMENT_DATA_FILTER)\r\n    this.dataSource = new MatTableDataSource(this.ELEMENT_DATA_FILTER);\r\n    console.log(this.dataSource)\r\n    this.dataSource.sort = this.sort;\r\n    this.loading = false;\r\n  }\r\n\r\n\r\n  constructor(private mapsAPILoader: MapsAPILoader, private fb: FormBuilder, private webService: WebService, public rentDialog: MatDialog) {\r\n    // init filterForm (fields and validators):\r\n    this.filterForm = fb.group({\r\n      floatLabel: 'auto',\r\n      'maxPrice': [\"\", [Validators.pattern('[0-9]*')]],\r\n      'maxDistance': [\"\", [Validators.pattern('[0-9]*')]],\r\n      'locationOption': [\"\", [Validators.required]],\r\n    });\r\n  }\r\n\r\n  getAddress(lat: number, lng: number): string {\r\n    if (navigator.geolocation) {\r\n      let geocoder = new google.maps.Geocoder();\r\n      let latlng = new google.maps.LatLng(lat, lng);\r\n      let request = { latLng: latlng };\r\n      let res = '(lat=' + lat + ',lng=' + lng + ')'\r\n      geocoder.geocode(request, (results, status) => {\r\n        if (status == google.maps.GeocoderStatus.OK && results[0]) {\r\n          //console.log(\"************ results[0].formatted_address\", results[0].formatted_address)\r\n          res = results[0].formatted_address\r\n        }\r\n      });\r\n      return res\r\n    }\r\n  }\r\n\r\n  //--- UPDATE LOCATION --------------------------------------------------------------------------------------\r\n\r\n  findCurrentLocation() {\r\n    if (this.selectedCurrLocOption == 'GPS location') {\r\n      if (navigator.geolocation) {\r\n        navigator.geolocation.getCurrentPosition((position) => {\r\n          this.currlat = position.coords.latitude;\r\n          this.currlng = position.coords.longitude;\r\n        });\r\n      } else { // unable to get current location, so use the Technion address instead\r\n        alert(\"Geolocation is not supported by this browser.\");\r\n        this.changeCurrentLocationToTechnion()\r\n      }\r\n    } else if (this.selectedCurrLocOption == 'Technion') {\r\n      this.changeCurrentLocationToTechnion()\r\n    } else { // in case user define his address manially. for now use technion\r\n      this.changeCurrentLocationToTechnion()\r\n    }\r\n  }\r\n\r\n  changeCurrentLocationToTechnion() {\r\n    this.currlat = this.thecnionlat;\r\n    this.currlng = this.thecnionlng;\r\n    //this.getAddress(this.currlat, this.currlng)\r\n  }\r\n\r\n  //--- FILTER --------------------------------------------------------------------------------------\r\n\r\n  filterForm: FormGroup;\r\n  filterElement: FilterElement = {\r\n    locationOption: 'GPS location',\r\n    maxDistance: -1, // meters\r\n    maxPrice: -1,\r\n  };\r\n  locationOptions: string[] = ['GPS location', 'Technion']; // need to add \"choose by address\"\r\n\r\n  filter() {\r\n    this.filterElement.locationOption = this.filterForm.value.locationOption;\r\n\r\n    this.filterElement.maxDistance = (this.filterForm.value.maxDistance == \"\" || this.filterForm.value.maxDistance == null) ? -1 : this.filterForm.value.maxDistance;\r\n    this.filterElement.maxPrice = (this.filterForm.value.maxPrice == \"\" || this.filterForm.value.maxPrice == null) ? -1 : this.filterForm.value.maxPrice;\r\n\r\n    this.selectedCurrLocOption = this.filterForm.value.locationOption;\r\n\r\n    this.findCurrentLocation();\r\n    this.filterMarkers()\r\n  }\r\n\r\n  reset() {\r\n    this.filterForm.reset();\r\n    this.filterElement.maxDistance = -1;\r\n    this.filterElement.maxPrice = -1;\r\n    this.filterMarkers()\r\n  }\r\n\r\n  filterMarkers() {\r\n    this.ELEMENT_DATA_FILTER = [];\r\n\r\n    const centerLoc = new google.maps.LatLng(this.currlat, this.currlng);\r\n    for (let spot of this.ELEMENT_DATA) {\r\n      const markerLoc = new google.maps.LatLng(spot.latitude, spot.longitude);\r\n      // spot.distance = Math.round(google.maps.geometry.spherical.computeDistanceBetween(markerLoc, centerLoc));\r\n\r\n      // if (((spot.distance <= this.filterElement.maxDistance) || (this.filterElement.maxDistance == -1)) &&\r\n\r\n        if(((spot.price <= this.filterElement.maxPrice) || (this.filterElement.maxPrice == -1))) {\r\n        this.ELEMENT_DATA_FILTER.push(spot);\r\n      }\r\n\r\n    }\r\n\r\n    this.dataSource = new MatTableDataSource(this.ELEMENT_DATA_FILTER);\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  //--- RENT SPOT -----------------------------------------------------------------------------------\r\n\r\n  selectedSpot: SpotElement = null;\r\n\r\n  rentSpot(spot: SpotElement) {\r\n    console.log(\"you choose to rent: \", spot);\r\n    this.selectedSpot = spot;\r\n    this.openRentDialog();\r\n    this.selectedSpot = null;\r\n  }\r\n\r\n  openRentDialog(): void {\r\n\r\n    /** config dialog */\r\n    const dialogConfig = new MatDialogConfig();\r\n\r\n    dialogConfig.disableClose = true;   /** the user will not be able to close the dialog just by clicking outside of it */\r\n    dialogConfig.autoFocus = false;     /** the focus will not be set automatically on the first form field of the dialog */\r\n\r\n    dialogConfig.height = '500px';      /** size of dialog window */\r\n    dialogConfig.width = '500px';\r\n\r\n    dialogConfig.data = { /** pass data to dialog */\r\n      id: this.selectedSpot.id,\r\n      building: this.selectedSpot.building,\r\n      city: this.selectedSpot.city,\r\n      street: this.selectedSpot.street,\r\n      end_time: this.selectedSpot.end_time,\r\n      start_time: this.selectedSpot.start_time,\r\n      price: this.selectedSpot.price,\r\n    };\r\n\r\n    /** open dialog */\r\n    const dialogRef = this.rentDialog.open(RentSpotDialogComponent, dialogConfig);\r\n\r\n    /** get data from dialog - empty for no */\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result != null) {\r\n        if (result == 'rent') {\r\n          console.log('The rent dialog was closed - *with* renting');\r\n        }\r\n        else if (result == 'close') {\r\n          console.log('The rent dialog was closed - *without* renting');\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\n//--- INTERFACES -----------------------------------------------------------------------------------\r\n\r\nexport interface SpotElement {\r\n  id: number;\r\n  latitude: number;\r\n  longitude: number;\r\n  street: string;\r\n  building: number;\r\n  city: string;\r\n  start_time: string;\r\n  end_time: string;\r\n  // distance: number;\r\n  price: number;\r\n  userId: string;  \r\n  buyerId: string;\r\n}\r\n\r\nexport interface FilterElement { // TODO: add date\r\n  locationOption: string\r\n  maxDistance: number;\r\n  maxPrice: number;\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvaG9tZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<p>\\r\\n  home works!\\r\\n</p>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \".mat-dialog-content {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n}\\r\\n  \\r\\n.mat-dialog-content > * {\\r\\n    width: 100%;\\r\\n}\\r\\n  \\r\\n.btn-primary, .btn-secondary {\\r\\n  width:130px;\\r\\n  margin-left: 20px;\\r\\n  margin-right: 20px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGNBQWM7SUFDZCx1QkFBdUI7Q0FDMUI7O0FBRUQ7SUFDSSxZQUFZO0NBQ2Y7O0FBRUQ7RUFDRSxZQUFZO0VBQ1osa0JBQWtCO0VBQ2xCLG1CQUFtQjtDQUNwQiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWF0LWRpYWxvZy1jb250ZW50IHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG59XHJcbiAgXHJcbi5tYXQtZGlhbG9nLWNvbnRlbnQgPiAqIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG4uYnRuLXByaW1hcnksIC5idG4tc2Vjb25kYXJ5IHtcclxuICB3aWR0aDoxMzBweDtcclxuICBtYXJnaW4tbGVmdDogMjBweDtcclxuICBtYXJnaW4tcmlnaHQ6IDIwcHg7XHJcbn0iXX0= */\"","module.exports = \"<!-- Title -->\\r\\n<h2 style=\\\"text-align:center\\\" mat-dialog-title>Login</h2>\\r\\n<!-- Content -->\\r\\n<div  >\\r\\n  <div *ngIf=\\\"loading\\\">\\r\\n    <mat-progress-spinner mode=\\\"indeterminate\\\" value=\\\"indeterminate\\\" style=\\\"width:15%; margin:0 auto;\\\"></mat-progress-spinner>\\r\\n    <p> {{spacer}} </p>\\r\\n    <p> {{spacer}} </p>\\r\\n  </div>\\r\\n</div>  \\r\\n<div *ngIf=\\\"!loading\\\" mat-dialog-content [formGroup]=\\\"loginForm\\\">\\r\\n  <p style=\\\"color:red;\\\" *ngIf=\\\"error\\\"> Error: {{error}} </p>\\r\\n\\r\\n  <!-- UserName -->\\r\\n  <mat-form-field>\\r\\n    <input matInput placeholder=\\\"email\\\" formControlName=\\\"email\\\" required>\\r\\n  </mat-form-field>\\r\\n\\r\\n  <!-- Password -->\\r\\n  <mat-form-field>\\r\\n    <input matInput placeholder=\\\"Password\\\" formControlName=\\\"password\\\" required [type]=\\\"hidePassword ? 'password' : 'text'\\\">\\r\\n    <mat-icon matSuffix (click)=\\\"hidePassword = !hidePassword\\\">{{hidePassword ? 'visibility_off' : 'visibility'}}</mat-icon>\\r\\n  </mat-form-field>\\r\\n\\r\\n</div>\\r\\n\\r\\n<!-- Bottons -->\\r\\n<div mat-dialog-actions align=\\\"center\\\">\\r\\n\\r\\n  <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"login()\\\" [disabled]=\\\"!loginForm.valid\\\">Login</button>\\r\\n\\r\\n  <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"close()\\\">Close</button>\\r\\n\\r\\n  <p> <br>\\r\\n    Don’t have an account?\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-link\\\" (click)=\\\"signUp()\\\">Sign Up</button>\\r\\n  </p>\\r\\n\\r\\n</div>\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { WebService } from '../web.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  loginForm: FormGroup;\r\n\r\n  loginpModel: LoginModel = {\r\n    email: 'Guest',\r\n    password: '',\r\n    closeOption: ''\r\n  };\r\n\r\n\r\n\r\n  hidePassword = true;  /* hide password as default */\r\n  logged = false;\r\n  error = null;\r\n  loading = false\r\n  spacer = '         '\r\n\r\n  constructor(private webService : WebService, private fb: FormBuilder, private dialogRef: MatDialogRef<LoginComponent>, @Inject(MAT_DIALOG_DATA) data) {\r\n    this.loginForm = fb.group({\r\n      hideRequired: true,\r\n      floatLabel: 'auto',\r\n      'email': [\"\",\r\n        [Validators.required, Validators.email]\r\n      ],\r\n      'password': [\"\",\r\n        [Validators.required]]\r\n    });\r\n\r\n    /** get the input to dialog - empty for now. use: \"var = data.fieldname;\" */\r\n  }\r\n\r\n  ngOnInit() { }\r\n\r\n  async login() {\r\n    this.loading = true\r\n    this.loginpModel.email = this.loginForm.value.email\r\n    this.loginpModel.password = this.loginForm.value.password\r\n    this.loginpModel.closeOption ='login'\r\n    this.error = '';\r\n    console.log(\"The login form was submitted: \" + JSON.stringify(this.loginpModel))  // TODO: delete!\r\n    var res =  await this.webService.PostLogIn(this.loginpModel)\r\n    console.log (res)\r\n    if(res['name']) {\r\n      this.error = null;\r\n      var result = {closeOption:'login', username: res['name']}\r\n      this.dialogRef.close(result)\r\n      this.loading = false;\r\n    }\r\n    if (res.Desc){\r\n      var tmp = res.Desc.split(\":\");\r\n      this.loading = false;\r\n      this.error = tmp[tmp.length -1]\r\n      return;\r\n    }\r\n\r\n  }\r\n\r\n  close() {\r\n    this.dialogRef.close();\r\n    console.log(\"The login form closed\"); // TODO: delete!\r\n  }\r\n\r\n  signUp() {\r\n    this.loginpModel.closeOption ='signup'\r\n    this.dialogRef.close(this.loginpModel);\r\n    console.log(\"The login form was closed and then open sign up form\")  // TODO: delete!\r\n  }\r\n\r\n}\r\n\r\nexport interface LoginModel {\r\n  email: string;\r\n  password: string;\r\n  closeOption: string;\r\n}\r\n","module.exports = \".navbar {\\r\\n    width: 100%;\\r\\n    background-color: #555;\\r\\n    overflow: auto;\\r\\n}\\r\\n  \\r\\n/* Navbar links */\\r\\n  \\r\\n.navbar a {\\r\\n    float: left;\\r\\n    text-align: center;\\r\\n    color: white;\\r\\n}\\r\\n  \\r\\n/* Navbar links on mouse-over */\\r\\n  \\r\\n.navbar a:hover {\\r\\n    background-color: #000;\\r\\n}\\r\\n  \\r\\n/* Current/active navbar link */\\r\\n  \\r\\n.active {\\r\\n    font-weight:bold;\\r\\n}\\r\\n  \\r\\n.nav-item{\\r\\n    align-self: center;\\r\\n    padding: 8px\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbmF2YmFyL25hdmJhci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksWUFBWTtJQUNaLHVCQUF1QjtJQUN2QixlQUFlO0NBQ2xCOztBQUVELGtCQUFrQjs7QUFDbEI7SUFDSSxZQUFZO0lBQ1osbUJBQW1CO0lBQ25CLGFBQWE7Q0FDaEI7O0FBRUQsZ0NBQWdDOztBQUNoQztJQUNJLHVCQUF1QjtDQUMxQjs7QUFFRCxnQ0FBZ0M7O0FBQ2hDO0lBQ0ksaUJBQWlCO0NBQ3BCOztBQUVEO0lBQ0ksbUJBQW1CO0lBQ25CLFlBQVk7Q0FDZiIsImZpbGUiOiJzcmMvYXBwL25hdmJhci9uYXZiYXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5uYXZiYXIge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNTU1O1xyXG4gICAgb3ZlcmZsb3c6IGF1dG87XHJcbn1cclxuICBcclxuLyogTmF2YmFyIGxpbmtzICovXHJcbi5uYXZiYXIgYSB7XHJcbiAgICBmbG9hdDogbGVmdDtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIGNvbG9yOiB3aGl0ZTtcclxufVxyXG4gIFxyXG4vKiBOYXZiYXIgbGlua3Mgb24gbW91c2Utb3ZlciAqL1xyXG4ubmF2YmFyIGE6aG92ZXIge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzAwMDtcclxufVxyXG5cclxuLyogQ3VycmVudC9hY3RpdmUgbmF2YmFyIGxpbmsgKi9cclxuLmFjdGl2ZSB7XHJcbiAgICBmb250LXdlaWdodDpib2xkO1xyXG59IFxyXG5cclxuLm5hdi1pdGVte1xyXG4gICAgYWxpZ24tc2VsZjogY2VudGVyO1xyXG4gICAgcGFkZGluZzogOHB4XHJcbn0iXX0= */\"","module.exports = \"<nav class=\\\"navbar navbar-expand-sm bg-dark navbar-dark\\\">\\r\\n\\r\\n  <!-- Brand / Logo -->\\r\\n  <!-- TODO: update name + logo -->\\r\\n  <a class=\\\"navbar-brand\\\" routerLink=\\\"\\\" style=\\\"font-size:x-large\\\">\\r\\n    <img src=\\\"../../assets/img/parking-logo-white.png\\\" width=\\\"35\\\" height=\\\"35\\\" alt=\\\"logo\\\">\\r\\n    Parking Renting\\r\\n  </a>\\r\\n\\r\\n  <!-- Collapsing The Navigation Bar -->\\r\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" (click)=\\\"toggleNavbar()\\\" data-target=\\\"#mainNavBar\\\">\\r\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n  </button>\\r\\n\\r\\n  <!-- The NavBar -->\\r\\n  <div class=\\\"collapse navbar-collapse show\\\" [ngClass]=\\\"{ 'show': navbarOpen }\\\" id=\\\"mainNavBar\\\">\\r\\n\\r\\n    <!-- Left: Find Parking, Become a Host -->\\r\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\r\\n\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" routerLink=\\\"\\\" routerLinkActive=\\\"active current\\\" [routerLinkActiveOptions]=\\\"{exact: true}\\\">\\r\\n          Home\\r\\n        </a>\\r\\n      </li>\\r\\n\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/find-parking\\\" routerLinkActive=\\\"active current\\\">\\r\\n          Find Parking\\r\\n        </a>\\r\\n      </li>\\r\\n\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/become-host\\\" routerLinkActive=\\\"active current\\\">\\r\\n          Become a Host\\r\\n        </a>\\r\\n      </li>\\r\\n\\r\\n    </ul>\\r\\n\\r\\n    <!-- Right: SignUp, Login -->\\r\\n    <ul class=\\\"nav navbar-nav navbar-right\\\">\\r\\n\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a *ngIf=\\\"username\\\">\\r\\n          Welcome {{username}}\\r\\n        </a>\\r\\n      </li>\\r\\n\\r\\n      <li class=\\\"nav-item\\\" *ngIf=\\\"!userIsLogin\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"openLoginDialog()\\\" style=\\\"width: 110px\\\">\\r\\n          <span class=\\\"fa fa-sign-in\\\"></span>\\r\\n          Login\\r\\n        </button>\\r\\n      </li>\\r\\n\\r\\n      <li class=\\\"nav-item\\\" *ngIf=\\\"userIsLogin\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"logout()\\\" style=\\\"width: 110px\\\">\\r\\n          <span class=\\\"fa fa-sign-out\\\"></span>\\r\\n          Logout\\r\\n        </button>\\r\\n      </li>\\r\\n\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"openSignUpDialog()\\\" style=\\\"width: 110px\\\">\\r\\n          <span class=\\\"fa fa-user\\\"></span>\\r\\n          Sign Up\\r\\n        </button>\\r\\n      </li>\\r\\n\\r\\n    </ul>\\r\\n\\r\\n  </div>\\r\\n\\r\\n</nav>\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA, MatDialogConfig } from '@angular/material';\r\nimport { LoginComponent } from '../login/login.component';\r\nimport { SignUpComponent } from '../sign-up/sign-up.component';\r\nimport { WebService } from '../web.service';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n\r\n  navbarOpen = false;\r\n  username: string = 'Guest';\r\n  userIsLogin = false; // TODO: use service instead\r\n\r\n  toggleNavbar() {\r\n    this.navbarOpen = !this.navbarOpen;\r\n  }\r\n\r\n  constructor(public loginDialog: MatDialog, public signUpDialog: MatDialog , private webService: WebService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  openLoginDialog(): void {\r\n\r\n    /** config dialog */\r\n    const dialogConfig = new MatDialogConfig();\r\n\r\n    dialogConfig.disableClose = true;   /** the user will not be able to close the dialog just by clicking outside of it */\r\n    dialogConfig.autoFocus = false;     /** the focus will not be set automatically on the first form field of the dialog */\r\n\r\n    dialogConfig.height = '350px';      /** size of dialog window */\r\n    dialogConfig.width = '500px';\r\n\r\n    dialogConfig.data = {};             /** pass data to dialog - empty for now */\r\n\r\n    /** open dialog */\r\n    const dialogRef = this.loginDialog.open(LoginComponent, dialogConfig);\r\n\r\n    /** get data from dialog: only username for now */\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result != null) {\r\n          if (result.closeOption == 'login'){\r\n            this.username = result.username; // else: username is still 'Guest'\r\n            this.userIsLogin = true;\r\n          }\r\n          else if (result.closeOption == 'signup'){\r\n            this.openSignUpDialog();\r\n          }\r\n      }\r\n    });\r\n  }\r\n\r\n  logout(): void {\r\n    this.webService.postLogOut();\r\n    this.username = 'Guest';\r\n    this.userIsLogin = false;\r\n  }\r\n\r\n  openSignUpDialog(): void {\r\n\r\n    /** config dialog */\r\n    const dialogConfig = new MatDialogConfig();\r\n\r\n    dialogConfig.disableClose = true;   /** the user will not be able to close the dialog just by clicking outside of it */\r\n    dialogConfig.autoFocus = false;     /** the focus will not be set automatically on the first form field of the dialog */\r\n\r\n    dialogConfig.height = '500px';      /** size of dialog window */\r\n    dialogConfig.width = '500px';\r\n\r\n    dialogConfig.data = {};             /** pass data to dialog - empty for now */\r\n\r\n    /** open dialog */\r\n    const dialogRef = this.signUpDialog.open(SignUpComponent, dialogConfig);\r\n\r\n    /** get data from dialog - empty for no */\r\n    dialogRef.afterClosed().subscribe(result => { });\r\n  }\r\n\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL25vdC1mb3VuZC9ub3QtZm91bmQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<p>\\r\\n  not-found works!\\r\\n</p>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-not-found',\r\n  templateUrl: './not-found.component.html',\r\n  styleUrls: ['./not-found.component.css']\r\n})\r\nexport class NotFoundComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlbnQtc3BvdC1kaWFsb2cvcmVudC1zcG90LWRpYWxvZy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<h1 mat-dialog-title>Rent Spot</h1>\\r\\n\\r\\n\\r\\n<div mat-dialog-content>\\r\\n  <p>You have selected the parking spot with the following characteristics:</p>\\r\\n\\r\\n  <p><b>ID: </b>{{spot.id}}</p>\\r\\n  <p><b>price: </b>{{spot.price}}</p>\\r\\n  <p><b>address: </b>{{spot.city}} {{spot.street}} {{spot.building}} </p>\\r\\n  <p><b>start time: </b> {{spot.start_time}} </p>\\r\\n  <p><b>end time: </b> {{spot.end_time}} </p>\\r\\n\\r\\n</div>\\r\\n\\r\\n<div mat-dialog-actions>\\r\\n  <button mat-button (click)=\\\"rent(spot.id)\\\">Rent</button>\\r\\n  <button mat-button (click)=\\\"close()\\\">Close</button>\\r\\n</div> \"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA, MatDialogConfig } from '@angular/material';\r\nimport { WebService } from '../web.service';\r\n\r\n@Component({\r\n  selector: 'app-rent-spot-dialog',\r\n  templateUrl: './rent-spot-dialog.component.html',\r\n  styleUrls: ['./rent-spot-dialog.component.css']\r\n})\r\nexport class RentSpotDialogComponent implements OnInit {\r\n\r\n  constructor(public dialogRef: MatDialogRef<RentSpotDialogComponent>, @Inject(MAT_DIALOG_DATA) public spot: SpotElement, private webService: WebService) { }\r\n\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  close(): void {\r\n    this.dialogRef.close('close');\r\n  }\r\n\r\n  async rent(spotId) {\r\n    var res = await this.webService.postRent(spotId);\r\n    if(res == null){\r\n      this.dialogRef.close('rent');\r\n    } else {\r\n      alert('error');\r\n    }\r\n  } \r\n}\r\n\r\n\r\nexport interface SpotElement {\r\n  id: number;\r\n  street: string;\r\n  building: number;\r\n  city: string;\r\n  start_time: string;\r\n  end_time: string;\r\n  distance: number;\r\n  price: number;\r\n}","module.exports = \".container{\\r\\n    width: 800px; \\r\\n    margin-left: unset; \\r\\n    margin-top: 10px;\\r\\n}\\r\\n\\r\\n.mat-form {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    margin-top: 10px;\\r\\n    margin-bottom: 10px;\\r\\n}\\r\\n\\r\\n.btn-primary, .btn-secondary {\\r\\n    width:130px;\\r\\n    align-self: center;\\r\\n}\\r\\n\\r\\n.button {\\r\\n    display: inline-block;\\r\\n    margin-left: 20px;\\r\\n    margin-right: 20px;\\r\\n }\\r\\n\\r\\n.date-field {\\r\\n    width: 50px;\\r\\n}\\r\\n\\r\\n.row {\\r\\n    margin-bottom: 20px;\\r\\n}\\r\\n\\r\\n.col-sm-1, .col-sm-2, .col-sm-3, .col-sm-4 {\\r\\n    align-self: center;\\r\\n}\\r\\n\\r\\nmat-label {\\r\\n    font-size: larger;\\r\\n}\\r\\n\\r\\n.date-input-field {\\r\\n    width:130px; \\r\\n    text-align: center\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcmVudC1zcG90LWZvcm0vcmVudC1zcG90LWZvcm0uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGFBQWE7SUFDYixtQkFBbUI7SUFDbkIsaUJBQWlCO0NBQ3BCOztBQUVEO0lBQ0ksY0FBYztJQUNkLHVCQUF1QjtJQUN2QixpQkFBaUI7SUFDakIsb0JBQW9CO0NBQ3ZCOztBQUVEO0lBQ0ksWUFBWTtJQUNaLG1CQUFtQjtDQUN0Qjs7QUFFRDtJQUNJLHNCQUFzQjtJQUN0QixrQkFBa0I7SUFDbEIsbUJBQW1CO0VBQ3JCOztBQUVGO0lBQ0ksWUFBWTtDQUNmOztBQUVEO0lBQ0ksb0JBQW9CO0NBQ3ZCOztBQUVEO0lBQ0ksbUJBQW1CO0NBQ3RCOztBQUVEO0lBQ0ksa0JBQWtCO0NBQ3JCOztBQUVEO0lBQ0ksWUFBWTtJQUNaLGtCQUFrQjtDQUNyQiIsImZpbGUiOiJzcmMvYXBwL3JlbnQtc3BvdC1mb3JtL3JlbnQtc3BvdC1mb3JtLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY29udGFpbmVye1xyXG4gICAgd2lkdGg6IDgwMHB4OyBcclxuICAgIG1hcmdpbi1sZWZ0OiB1bnNldDsgXHJcbiAgICBtYXJnaW4tdG9wOiAxMHB4O1xyXG59XHJcblxyXG4ubWF0LWZvcm0ge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBtYXJnaW4tdG9wOiAxMHB4O1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxufVxyXG5cclxuLmJ0bi1wcmltYXJ5LCAuYnRuLXNlY29uZGFyeSB7XHJcbiAgICB3aWR0aDoxMzBweDtcclxuICAgIGFsaWduLXNlbGY6IGNlbnRlcjtcclxufVxyXG5cclxuLmJ1dHRvbiB7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICBtYXJnaW4tbGVmdDogMjBweDtcclxuICAgIG1hcmdpbi1yaWdodDogMjBweDtcclxuIH1cclxuXHJcbi5kYXRlLWZpZWxkIHtcclxuICAgIHdpZHRoOiA1MHB4O1xyXG59XHJcblxyXG4ucm93IHtcclxuICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XHJcbn1cclxuXHJcbi5jb2wtc20tMSwgLmNvbC1zbS0yLCAuY29sLXNtLTMsIC5jb2wtc20tNCB7XHJcbiAgICBhbGlnbi1zZWxmOiBjZW50ZXI7XHJcbn1cclxuXHJcbm1hdC1sYWJlbCB7XHJcbiAgICBmb250LXNpemU6IGxhcmdlcjtcclxufVxyXG5cclxuLmRhdGUtaW5wdXQtZmllbGQge1xyXG4gICAgd2lkdGg6MTMwcHg7IFxyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyXHJcbn0iXX0= */\"","module.exports = \"<div class=\\\"container\\\" [formGroup]=\\\"rentSpotForm\\\">\\r\\n\\r\\n  <!-- Title -->\\r\\n  <h2>Rent your spot</h2>\\r\\n\\r\\n  <!-- Form -->\\r\\n  <div class=\\\"mat-form\\\">\\r\\n\\r\\n\\r\\n    <!-- Address: -->\\r\\n    <div class=\\\"row\\\" formGroupName=\\\"address\\\">\\r\\n\\r\\n      <!-- Label -->\\r\\n      <div class=\\\"col-sm-2\\\">\\r\\n        <mat-label>Address:</mat-label>\\r\\n      </div>\\r\\n\\r\\n      <!-- City -->\\r\\n      <div class=\\\"col-sm-3\\\">\\r\\n        <mat-form-field class=\\\"form-field\\\">\\r\\n          <input matInput placeholder=\\\"City\\\" formControlName=\\\"city\\\" required>\\r\\n          <mat-error *ngIf=\\\"rentSpotForm.get('address').controls['city'].hasError('pattern')\\\">\\r\\n            Please enter a valid city name: Letters only\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n      <!-- Street -->\\r\\n      <div class=\\\"col-sm-3\\\">\\r\\n        <mat-form-field class=\\\"form-field\\\">\\r\\n          <input matInput placeholder=\\\"Street\\\" formControlName=\\\"street\\\" required>\\r\\n          <mat-error *ngIf=\\\"rentSpotForm.get('address').controls['street'].hasError('pattern')\\\">\\r\\n            Please enter a valid street name: Letters only\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n      <!-- Parking spot number -->\\r\\n      <div class=\\\"col-sm-3\\\">\\r\\n        <mat-form-field class=\\\"form-field\\\">\\r\\n          <input matInput placeholder=\\\"Parking spot number\\\" formControlName=\\\"spot_num\\\">\\r\\n          <mat-error *ngIf=\\\"rentSpotForm.get('address').controls['spot_num'].hasError('pattern')\\\">\\r\\n            Please enter a valid parking spot number: Integer number only\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <!-- Start time: -->\\r\\n    <div class=\\\"row\\\" formGroupName=\\\"start_time\\\">\\r\\n\\r\\n      <!-- Label -->\\r\\n      <div class=\\\"col-sm-2\\\">\\r\\n        <mat-label>Start time:</mat-label>\\r\\n      </div>\\r\\n\\r\\n      <!-- Date: -->\\r\\n      <div class=\\\"col-sm-3\\\">\\r\\n        <div class=\\\"input-group\\\">\\r\\n          <input formControlName=\\\"start_date\\\" placeholder=\\\"yyyy-mm-dd\\\" name=\\\"dpS\\\" ngbDatepicker #dS=\\\"ngbDatepicker\\\"\\r\\n            class=\\\"date-input-field\\\">\\r\\n          <div class=\\\"input-group-append\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" (click)=\\\"dS.toggle()\\\">\\r\\n              <span class=\\\"fa fa-calendar\\\"></span>\\r\\n            </button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <!-- Hour: -->\\r\\n      <div class=\\\"col-sm-3\\\">\\r\\n        <ngb-timepicker formControlName=\\\"start_hour\\\" required></ngb-timepicker>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <!-- End time: -->\\r\\n    <div class=\\\"row\\\" formGroupName=\\\"end_time\\\">\\r\\n\\r\\n      <!-- Label -->\\r\\n      <div class=\\\"col-sm-2\\\">\\r\\n        <mat-label>End time:</mat-label>\\r\\n      </div>\\r\\n\\r\\n      <!-- Date: -->\\r\\n      <div class=\\\"col-sm-3\\\">\\r\\n        <div class=\\\"input-group\\\">\\r\\n          <input formControlName=\\\"end_date\\\" placeholder=\\\"yyyy-mm-dd\\\" name=\\\"dpE\\\" ngbDatepicker #dE=\\\"ngbDatepicker\\\"\\r\\n            [markDisabled]=\\\"isDisabled\\\" class=\\\"date-input-field\\\">\\r\\n          <div class=\\\"input-group-append\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" (click)=\\\"dE.toggle()\\\">\\r\\n              <span class=\\\"fa fa-calendar\\\"></span>\\r\\n            </button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <!-- Hour: -->\\r\\n      <div class=\\\"col-sm-3\\\">\\r\\n        <ngb-timepicker formControlName=\\\"end_hour\\\" required></ngb-timepicker>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <!-- Price per hour: -->\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n      <!-- Label -->\\r\\n      <div class=\\\"col-sm-2\\\">\\r\\n        <mat-label>Price:</mat-label>\\r\\n      </div>\\r\\n\\r\\n      <!-- Price -->\\r\\n      <div class=\\\"col-sm-3\\\">\\r\\n        <mat-form-field class=\\\"form-field\\\">\\r\\n          <input matInput placeholder=\\\"Price per hour\\\" formControlName=\\\"price\\\" required>\\r\\n          <mat-error *ngIf=\\\"rentSpotForm.controls['price'].hasError('pattern')\\\">\\r\\n            Please enter a valid price: float number only\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n\\r\\n  </div>\\r\\n\\r\\n  <p style=\\\"color:green;\\\" *ngIf=\\\"added\\\">successfully add a new spot</p>\\r\\n  <p style=\\\"color:red;\\\" *ngIf=\\\"error_msg\\\">{{error_msg}}</p>\\r\\n\\r\\n  <!-- Buttons -->\\r\\n  <div style=\\\"width:300px; align-self: center\\\">\\r\\n\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"addNewSpot()\\\" [disabled]=\\\"!rentSpotForm.valid\\\" style=\\\"float: left\\\">Submit</button>\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"reset()\\\" style=\\\"float: right\\\">Reset</button>\\r\\n\\r\\n  </div>\\r\\n\\r\\n\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { RentSpotModel } from '../rent-spot'\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { WebService } from '../web.service';\r\nimport { NgbDatepickerConfig, NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n\tselector: 'app-rent-spot-form',\r\n\ttemplateUrl: './rent-spot-form.component.html',\r\n\tstyleUrls: ['./rent-spot-form.component.css']\r\n})\r\nexport class RentSpotFormComponent implements OnInit {\r\n\r\n\terror_msg = '';\r\n\r\n\tadded = false;\r\n\r\n\trentSpotForm: FormGroup;\r\n\r\n\trentSpotModel: RentSpotModel = new RentSpotModel('', '', null, null, 0)\r\n\r\n\tconstructor(private fb: FormBuilder, datepickerConfig: NgbDatepickerConfig, private webService: WebService) {\r\n\r\n\t\t// configuration of NgbDatepickerConfig (used for disable dates before today):\r\n\t\tconst currentDate = new Date();\r\n\t\tdatepickerConfig.minDate = { year: currentDate.getFullYear(), month: currentDate.getMonth() + 1, day: currentDate.getDate() };\r\n\t\tdatepickerConfig.outsideDays = 'hidden';\r\n\r\n\t\t// init rentSpotForm (fields and validators):\r\n\t\tthis.rentSpotForm = fb.group({\r\n\t\t\tfloatLabel: 'auto',\r\n\r\n\t\t\t'address': this.fb.group({\r\n\t\t\t\t'city': [\"\", [Validators.required, Validators.pattern('[a-zA-Z ]*')]],\r\n\t\t\t\t'street': [\"\", [Validators.required, Validators.pattern('[a-zA-Z ]*')]],\r\n\t\t\t\t'spot_num': [\"\", [Validators.pattern('[0-9]*')]],\r\n\t\t\t}),\r\n\r\n\t\t\t'start_time': this.fb.group({\r\n\t\t\t\t'start_date': [\"\", [Validators.required]],\r\n\t\t\t\t'start_hour': ['', [Validators.required]],\r\n\t\t\t}),\r\n\r\n\t\t\t'end_time': this.fb.group({\r\n\t\t\t\t'end_date': [\"\", [Validators.required]],\r\n\t\t\t\t'end_hour': ['', [Validators.required]],\r\n\t\t\t}),\r\n\r\n\t\t\t'price': [\"\", [Validators.required, Validators.pattern('[0-9]+((.)[0-9]+)?')]],\r\n\t\t});\r\n\t}\r\n\r\n\tngOnInit() { }\r\n\r\n\tasync addNewSpot() {\r\n\t\tthis. added = false;\r\n\t\tthis.error_msg = '';\r\n\t\tthis.rentSpotModel.city = this.rentSpotForm.value.address.city\r\n\t\tthis.rentSpotModel.street = this.rentSpotForm.value.address.street\r\n\t\tthis.rentSpotModel.spot_num = this.rentSpotForm.value.address.spot_num\r\n\r\n\t\tvar startTime = new Date(\r\n\t\t\tthis.rentSpotForm.value.start_time.start_date.year,\r\n\t\t\tthis.rentSpotForm.value.start_time.start_date.month - 1,\r\n\t\t\tthis.rentSpotForm.value.start_time.start_date.day,\r\n\t\t\tthis.rentSpotForm.value.start_time.start_hour.hour,\r\n\t\t\tthis.rentSpotForm.value.start_time.start_hour.minute)\r\n\t\tthis.rentSpotModel.start_time = startTime\r\n\r\n\t\tvar endTime = new Date(\r\n\t\t\tthis.rentSpotForm.value.end_time.end_date.year,\r\n\t\t\tthis.rentSpotForm.value.end_time.end_date.month - 1,\r\n\t\t\tthis.rentSpotForm.value.end_time.end_date.day,\r\n\t\t\tthis.rentSpotForm.value.end_time.end_hour.hour ,\r\n\t\t\tthis.rentSpotForm.value.end_time.end_hour.minute)\r\n\t\tthis.rentSpotModel.end_time = endTime\r\n\r\n\t\tthis.rentSpotModel.price = this.rentSpotForm.value.price\r\n\r\n\t\tthis.reset();\r\n\r\n\t\tconsole.log(\"The rent spot form was submitted: \" + JSON.stringify(this.rentSpotModel))  // TODO: delete!\r\n\r\n\t\tvar res = await this.webService.addSpot(this.rentSpotModel);\r\n\t\tif(res = \"successfully add a new spot\"){\r\n\t\t\tthis.added = true;\r\n\t\t}\r\n\t\telse{\r\n\t\t\tthis.error_msg = res.Desc;\r\n\t\t\t// this.error = true\r\n\t\t}\r\n\r\n\t\t// for tests:\r\n\t\t// var sd = startTime;\r\n\t\t// console.log(\"sd: \", sd)\r\n\t\t// console.log(\"time: \" + \" yyyy=\" + sd.getFullYear() + \" mm=\" + sd.getMonth() + \" dd=\" + sd.getDate() + \" h=\" + sd.getHours() + \" m=\" + sd.getMinutes())\r\n\t}\r\n\r\n\treset() {\r\n\t\tthis.rentSpotForm.reset();\r\n\t}\r\n\r\n}\r\n","export class RentSpotModel {\r\n\r\n\tconstructor(\r\n\t\tpublic city: string,\r\n\t\tpublic street: string,\r\n\t\tpublic start_time: Date,\r\n\t\tpublic end_time: Date,\r\n\t\tpublic price: number,\r\n\t\tpublic spot_num?: number,\r\n\t) { }\r\n\r\n}\r\n","module.exports = \".mat-dialog-content {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n}\\r\\n  \\r\\n.mat-dialog-content > * {\\r\\n    width: 100%;\\r\\n}\\r\\n  \\r\\n.btn-primary, .btn-secondary {\\r\\n  width:130px;\\r\\n  margin-left: 20px;\\r\\n  margin-right: 20px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2lnbi11cC9zaWduLXVwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxjQUFjO0lBQ2QsdUJBQXVCO0NBQzFCOztBQUVEO0lBQ0ksWUFBWTtDQUNmOztBQUVEO0VBQ0UsWUFBWTtFQUNaLGtCQUFrQjtFQUNsQixtQkFBbUI7Q0FDcEIiLCJmaWxlIjoic3JjL2FwcC9zaWduLXVwL3NpZ24tdXAuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tYXQtZGlhbG9nLWNvbnRlbnQge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbn1cclxuICBcclxuLm1hdC1kaWFsb2ctY29udGVudCA+ICoge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbi5idG4tcHJpbWFyeSwgLmJ0bi1zZWNvbmRhcnkge1xyXG4gIHdpZHRoOjEzMHB4O1xyXG4gIG1hcmdpbi1sZWZ0OiAyMHB4O1xyXG4gIG1hcmdpbi1yaWdodDogMjBweDtcclxufSJdfQ== */\"","module.exports = \"<!-- Title -->\\r\\n<h2 style=\\\"text-align:center\\\" mat-dialog-title>Sign Up</h2>\\r\\n\\r\\n<!-- Content -->\\r\\n<div mat-dialog-content [formGroup]=\\\"signUpForm\\\">\\r\\n\\r\\n  <!-- First Nmae -->\\r\\n  <mat-form-field>\\r\\n    <input matInput placeholder=\\\"First name\\\" formControlName=\\\"fname\\\" required>\\r\\n  </mat-form-field>\\r\\n\\r\\n  <!-- Last Nmae -->\\r\\n  <mat-form-field>\\r\\n    <input matInput placeholder=\\\"Last name\\\" formControlName=\\\"lname\\\" required>\\r\\n  </mat-form-field>\\r\\n\\r\\n  <!-- UserName -->\\r\\n  <mat-form-field>\\r\\n    <input matInput placeholder=\\\"Username\\\" formControlName=\\\"username\\\" required>\\r\\n  </mat-form-field>\\r\\n\\r\\n  <!-- Password -->\\r\\n  <mat-form-field hintLabel=\\\"{{passwordHintMessage}}\\\">\\r\\n    <input matInput placeholder=\\\"Password\\\" formControlName=\\\"password\\\" required [type]=\\\"hidePassword ? 'password' : 'text'\\\">\\r\\n    <mat-icon matSuffix (click)=\\\"hidePassword = !hidePassword\\\">{{hidePassword ? 'visibility_off' : 'visibility'}}</mat-icon>\\r\\n    <mat-error *ngIf=\\\"signUpForm.controls['password'].hasError('pattern')\\\">\\r\\n      Please enter a valid password: {{passwordHintMessage}}\\r\\n    </mat-error>\\r\\n  </mat-form-field>\\r\\n\\r\\n  <!-- Emaiil -->\\r\\n  <mat-form-field style=\\\"margin-top: 30px\\\">\\r\\n    <input matInput placeholder=\\\"Email address\\\" formControlName=\\\"email\\\" required>\\r\\n    <mat-error *ngIf=\\\"signUpForm.controls['email'].hasError('email')\\\">\\r\\n      Please enter a valid email address\\r\\n    </mat-error>\\r\\n  </mat-form-field>\\r\\n\\r\\n</div>\\r\\n\\r\\n<!-- Bottons -->\\r\\n<div mat-dialog-actions align=\\\"center\\\">\\r\\n\\r\\n  <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"signUp()\\\" [disabled]=\\\"!signUpForm.valid\\\">Sign Up</button>\\r\\n  <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"close()\\\">Close</button>\\r\\n\\r\\n</div>\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { WebService } from '../web.service';\r\n\r\n@Component({\r\n  selector: 'app-sign-up',\r\n  templateUrl: './sign-up.component.html',\r\n  styleUrls: ['./sign-up.component.css']\r\n})\r\nexport class SignUpComponent implements OnInit {\r\n\r\n  signUpForm: FormGroup;\r\n\r\n  signUpModel: SignUpModel = {\r\n    name: '',\r\n    username: '',\r\n    password: '',\r\n    email: '',\r\n  };\r\n\r\n  hidePassword = true;  /* hide password as default */\r\n\r\n  passwordHintMessage = \"Use at least 8 characters, include at least one digit, one uppercase letter and one lowercase letter\";\r\n\r\n  constructor(private webService : WebService, private fb: FormBuilder, private dialogRef: MatDialogRef<SignUpComponent>, @Inject(MAT_DIALOG_DATA) data) {\r\n    this.signUpForm = fb.group({\r\n      hideRequired: true,\r\n      floatLabel: 'auto',\r\n      'fname': [\"\",\r\n        [Validators.required]\r\n      ],\r\n      'lname': [\"\",\r\n        [Validators.required]\r\n      ],\r\n      'username': [\"\",\r\n        [Validators.required]\r\n      ],\r\n      'password': [\"\",\r\n        [Validators.required,\r\n        Validators.pattern('(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z]).{8,}')]\r\n      ],\r\n      'email': [\"\",\r\n        [Validators.required,\r\n        Validators.email]\r\n      ]\r\n    });\r\n\r\n    /** get the input to dialog - empty for now. use: \"var = data.fieldname;\" */\r\n  }\r\n\r\n  ngOnInit() { }\r\n\r\n  signUp() {\r\n    this.signUpModel.name = this.signUpForm.value.fname+\" \"+this.signUpForm.value.lname\r\n    this.signUpModel.username = this.signUpForm.value.username\r\n    this.signUpModel.password = this.signUpForm.value.password\r\n    this.signUpModel.email = this.signUpForm.value.email\r\n    this.dialogRef.close(this.signUpModel);\r\n    console.log(\"The sign up form was submitted: \" + JSON.stringify(this.signUpModel))  // TODO: delete!\r\n    this.webService.PostSignUp(this.signUpModel);\r\n  }\r\n\r\n  close() {\r\n    this.dialogRef.close();\r\n    console.log(\"The sign up form closed\"); // TODO: delete!\r\n  }\r\n\r\n}\r\n\r\nexport interface SignUpModel {\r\n  name: string;\r\n  username: string;\r\n  password: string;\r\n  email: string;\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient , HttpHeaders } from '@angular/common/http';\r\nimport { RentSpotModel } from './rent-spot'\r\nimport * as auth0 from 'auth0-js';\r\n\r\n\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({\r\n    'Access-Control-Allow-Origin': 'http://localhost:8080'\r\n  }),\r\n};\r\n\r\n@Injectable()\r\nexport class WebService {\r\n\r\nBASE_URL = 'http://localhost:8080';\r\nADD_SPOT_URL = '/logged/add/renting_spot';\r\nSIGNUP_URL = 'https://team6a.auth0.com/dbconnections/signup';\r\nLOGIN_URL = '/login';\r\nLOGOUT = '/logged/logout';\r\nGET_SPOT_URL = '/logged/search/all/renting_spots'\r\nGET_SPOT_BY_LOCATION_URL = '/logged/search/some/renting_spots'\r\nRENT_URL = 'logged/rent/renting_spot'\r\n\t\r\nclient_id = 'BP5o9rPZ8cTpRu-RTbmSA6eZ3ZbgICva'  \r\n\r\n\r\n  \tconstructor(private http: HttpClient) { }\r\n\r\n  \tasync addSpot(rent: RentSpotModel){\r\n      var body = {\r\n          city: rent.city,\r\n          street: rent.street,\r\n          start_time: rent.start_time,\r\n          end_time: rent.end_time,\r\n          price: rent.price,\r\n          spot_num: ''\r\n        }\r\n      if(rent.spot_num){\r\n        body.spot_num = rent.spot_num.toString();\r\n      }\r\n      console.log(JSON.stringify( body))\r\n  \t\tawait this.http.post(this.BASE_URL+this.ADD_SPOT_URL, body).subscribe(res=>{\r\n  \t\t\tconsole.log(JSON.stringify(res));\t\r\n  \t\t\treturn \"successfully add a new spot\"\r\n  \t\t},\r\n  \t\terr=>{\r\n  \t\t\treturn err\r\n  \t\t}\r\n  \t\t);\r\n      return null\r\n  \t}\r\n\r\n    PostSignUp(form){\r\n        var signUpHeades={\r\n        headers: new HttpHeaders( { 'content-type': 'application/json' }),\r\n      }\r\n      var body={\r\n       client_id: this.client_id,\r\n       email: form.email,\r\n       password: form.password,\r\n       connection: 'Username-Password-Authentication',\r\n       user_metadata: { name: form.name ,username: form.username },\r\n       json: true,\r\n     };\r\n\r\n      console.log(body);\r\n      this.http.post(this.SIGNUP_URL,body,signUpHeades).subscribe( res=>{\r\n      console.log(res);   //TODO: delete\r\n     })\r\n  }\r\n\r\n\r\n\r\n  async PostLogIn(user){\r\n    var body = {\r\n      username: user.email,\r\n      password: user.password\r\n    }\r\n    console.log(JSON.stringify(body))\r\n    console.log(this.BASE_URL + this.LOGIN_URL)\r\n    try{\r\n      var x = await this.http.post(this.BASE_URL + this.LOGIN_URL, body).toPromise()\r\n      return x;\r\n    }\r\n    catch (error) {\r\n      return error.Desc;\r\n    }\r\n}\r\n\r\n  async getSpots(){\r\n    var body = {\r\n    }\r\n\r\n    try{\r\n      var res = await this.http.post(this.BASE_URL + this.GET_SPOT_URL, body).toPromise();\r\n      return JSON.stringify(res);\r\n    }\r\n    catch(error){\r\n      return JSON.stringify(error);\r\n    }  \r\n  }\r\n\r\n\r\n  async postRent(spot){\r\n    var body = {\r\n      id: spot,\r\n    }\r\n    try{\r\n      var res = await this.http.post(this.BASE_URL + this.RENT_URL, body).toPromise();\r\n      return null;\r\n    }\r\n    catch(error){\r\n      return 'error';\r\n    } \r\n  }\r\n\r\n  postLogOut(){\r\n    this.http.get(this.BASE_URL + this.LOGOUT).toPromise();\r\n\r\n  }\r\n} \r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}